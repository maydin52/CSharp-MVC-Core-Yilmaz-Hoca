
Controller içerisindeki Token nedir?
[ValidateAntiForgeryToken]
web uygulamalarında sizin formunu dışında başka ortamlardan veri gelmesi sağlanabiliyor.
Bu onu bozuyor.
Arkada bir token oluşturuyor ve bunu ön yüze gönderiyor.
Daha sonra serverla bu token aynı olduğu için, yani başka bir yerden geldiğinde bu token bilgisi olmayacağı için işlemin yapılmasını engeller.
Bu konu ayrıca anlatılacak daha sonra web servisleri anlatırken. 
JWT Json Web Token teknolojisi. Servislerin güvenliği konusunda çok kullanılıyor. Zamana bağlı mesela 10 dk da bir tokeni değiştir diyebiliyor. Adam onu buluncaya kadar token değişiyor zaten.
jwt.io kendi resmi sitesinden baktık. Bunun ilginç bir kullanımı var. Üç parçadan oluşuyor. Sitede renklendirilmiş.
Token 50 yıllık teknoloji. WCF i anlatırken de token teknolojisini kullanıyorduk. 
Token bir madalyonun iki parçası gibi.
Client geldiğinde tokenlar aynıysa bu iki kişi birbirini tanıyor.
Sunucu oluşturuyor. Bir kopyası bende bir kopyası clientta.
Tokenlar hashlenmiş tutuluyor. 

Sessiondaki 20 dk hareketsiz kalırsa atma olayı farklı. 
Core da session kullanımı çok farklı. Düz mantıkla kullanamıyorsunuz.
Core öncesi sessionları istediğiniz gibi kullanabiliyordunuz. Core ile birlikte ilgili ayarları yapmadan  session ları kullanamıyorsunuz.
Session kullanıcı adı ve şifre ile sisteme giriş yaptınız diyelim. Giriş yaptıktan sonra sistem arka planda bir session oluşturuyor. 
Bu sessionları (herhangi bir ayarlama yapılmazsa standart ayarı 20 dk.) mekanizma siz pc den uzaklaştıktan sonra klavye ve fare eventleri kesildikten sonra 
session öldürülür ve login ekranına atıyor.
(core önce 1 dk nın altına düşemiyordunuz) (core da sn veya msn cinsinden session oluşturulabiliyor.)
Mantık token gibi. İki tarafta da session id bilgisi oluşturuluyor. İkisi aynı değilse bir taraf düştüğü için null olduğu için oturum kapatılıyor.

Hoca 1 lira bırakıp gitmenin dışında o sayfaya tıklanıp tıklanmadığının kontrol ediyormu araştıracak.

MS Identity konusunda profesyonel çözüm çıkarmış. Sıfırdan yazılabilir ama riskleri var. 

-------------------------------------------

1. Area - AdminPanel - Panel 

Index.cshtml bir önceki gündeki eski. Aşağıdaki sekilde revize.

<h1>Admin Panel Sayfasi....</h1>

<ul>
    <li><a asp-area="AdminPanel" asp-controller="Categories" asp-action="Index">Kategoriler</a></li>
    <li><a asp-area="AdminPanel" asp-controller="Authors" asp-action="Index">Yazarlar</a></li>
    <li><a asp-area="AdminPanel" asp-controller="Books" asp-action="Index">Kitaplar</a></li>
</ul>

PK FK ilişkisi gereği eğer kitap tablosuyla yazar tablosunu ilişkilendireceksem önce yazar tablosunu halletmeliyiz.

------

2. Author ve AuthorDetail tabloları birleştirilerek tek ekranda veri girilişi


2.a İki tabloyu view e taşımak için; Models klasörü altında ViewModels klasörü açarak onun altına AuthorVM classı ekliyoruz.

 public class AuthorVM
    {
        public Author Author { get; set; }
        public AuthorDetail? AuthorDetail { get; set; }
    }


2.b AuthorsController ı oluşturduk.

    [Area("AdminPanel")]
    public class AuthorsController : Controller
    {
        private readonly ApplicationDbContext _context;

        public AuthorsController(ApplicationDbContext context)
        {
            _context = context;
        }

        public IActionResult Index()
        {

            return View(_context.Authors.Include("AuthorDetail").ToList());
        }

        public IActionResult Create()
        {
            return View();
        }


        [HttpPost]
        public IActionResult Create(AuthorVM authorVM)
        {
            byte state = 0;
                 
            if (ModelState.IsValid)
            {              
               //İki SaveChanges() ile; FAKAT BURADA ŞÖYLE BİR SIKINTI VAR; 
               //_context.Authors.Add(authorVM.Author);
               //_context.SaveChanges();        //EF ekleme, düzenleme ve silme olarak kendisi SQL cümlelerini oluşturuyor arkaplanda. O yüzden tek SaveChanges() hallediyor.

               //if (authorVM.AuthorDetail != null)
               //{
                  //authorVM.AuthorDetail.AuthorDetailID = authorVM.Author.AuthorID;
                  //_context.AuthorDetails.Add(authorVM.AuthorDetail);
                  //_context.SaveChanges(); 
               //}




                _context.Authors.Add(authorVM.Author);

                // _context.SaveChanges();

                state = 1;
                if (authorVM.AuthorDetail.BirthDate !=null || authorVM.AuthorDetail.Region != null || authorVM.AuthorDetail.Biography != null)
                {
                    // authorVM.AuthorDetail.AuthorDetailID = authorVM.Author.AuthorID;
                    authorVM.AuthorDetail.Author = authorVM.Author;

                    _context.AuthorDetails.Add(authorVM.AuthorDetail);
                   // _context.SaveChanges();

                   state = 2;
                   
                }

                //Unit Of Work Pattern UoW
                //Tek SaveChanges() metodu ile PK ve FK kullanımı...
                _context.SaveChanges();
            }

            if(state >1)
              return RedirectToAction("Index");
            else
              return View();
        }

        public IActionResult Test()
        {
            //int count = FindCategories().Count(); 
            //
            //
            //int count = FindAuthors("a").Count();
            //

            //int count = Finds<Category>(x=>x.CategoryID %2==1).Count();
            string word = "a";
            int count = Finds<Author>(x=>x.FirstName.ToLower().Contains(word)).Count();

            List<Author> liste = Finds<Author>(x => x.FirstName.ToLower().Contains(word));

            string sonuc = "";
            foreach(Author a in liste)
            {
                sonuc += a.FirstName;
            }
            return Content("Sonuc=" + count.ToString()  + " " + sonuc);
        }


        //KategoriID si  tek olan  kategorileri getir?
        //Yazarın adında a harfi olanları getir?
        public List<Category> FindCategories()
        {

            //return _context.Categories.Find(id);
            return _context.Categories.Where(x=>x.CategoryID % 2==1).ToList();
        }

        public List<Author> FindAuthors(string word)
        {

            //return _context.Categories.Find(id);
            return _context.Authors.Where(x => x.FirstName.Contains(word)).ToList();
        }

        public List<TEntity> Finds<TEntity>(Func<TEntity,bool> where) where TEntity : class 
        {
            DbSet<TEntity> set = _context.Set<TEntity>();

            return _context.Set<TEntity>().Where(where).ToList();
        }
    }



2.c AuthorController ın Create.cshtml ini oluşturduk.

@using MVC_BookApp.Models.ViewModels;
@model AuthorVM

<form method="post" asp-area="AdminPanel" asp-controller="Authors" asp-action="Create">
    <table class="table table-striped">
        <tr>
            <td><label asp-for="Author.FirstName"></label></td>
            <td><input type="text" asp-for="Author.FirstName" class="form-control" required></input></td>
        </tr>
        <tr>
            <td><label asp-for="Author.LastName"></label></td>
            <td><input type="text" asp-for="Author.LastName" class="form-control" required></input></td>
        </tr>
        <tr>
            <td><label asp-for="AuthorDetail.BirthDate"></label></td>
            <td><input type="date" asp-for="AuthorDetail.BirthDate" class="form-control"></input></td>
        </tr>
         <tr>
            <td><label asp-for="AuthorDetail.Region"></label></td>
            <td><input type="text" asp-for="AuthorDetail.Region" class="form-control"></input></td>
        </tr>
        <tr>
            <td><label asp-for="AuthorDetail.Biography"></label></td>
            <td><textarea asp-for="AuthorDetail.Biography" class="form-control" cols="60" rows="5"></textarea></td>
        </tr>
        <tr>
            <td colspan="2"><input type="submit" value="Save Author Data" class="btn btn-primary"/></td>
            
        </tr>
    </table>
    <div asp-validation-summary="All"></div>
</form>



2.d AuthorController ın Index.cshtml ini oluşturduk.

@model IEnumerable<Author>

<table class="table table-striped">
    @foreach(var author in Model)
    {
    <tr>
        <td>@author.FirstName</td>
        <td>@author.LastName</td>
        @*<td>@author.AuthorDetail.BirthDate.Value.ToShortDateString()</td>*@

        <td>
            @if(author.AuthorDetail !=null)
            {
            @author.AuthorDetail.BirthDate.Value.ToString("dd/MM/yyyy")
            }
        </td>
       
    </tr>
    }
</table>



2.e 

